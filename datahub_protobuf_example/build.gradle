plugins {
    id 'java'
    id "com.google.protobuf" version "0.8.18"
}

repositories {
    mavenCentral()
}

ext {
    protobuf_version = '3.19.3'
    datahub_protobuf_version = '0.8.+'
}

configurations {
    datahub
}

dependencies {
    // compilation
    implementation "com.google.protobuf:protobuf-java:$protobuf_version"
    datahub "io.acryl:datahub-protobuf:$datahub_protobuf_version"
}

sourceSets {
    main {
        proto {
            srcDir 'myschema'
        }
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:$protobuf_version"
    }
    generateProtoTasks {
        all().each { task ->
            // If true, will generate a descriptor_set.desc file under
            // $generatedFilesBaseDir/$sourceSet. Default is false.
            // See --descriptor_set_out in protoc documentation about what it is.
            task.generateDescriptorSet = true

            // Allows to override the default for the descriptor set location
            task.descriptorSetOptions.path =
                    "${projectDir}/build/descriptors/${task.sourceSet.name}.dsc"

            // If true, the descriptor set will contain line number information
            // and comments. Default is false.
            task.descriptorSetOptions.includeSourceInfo = true

            // If true, the descriptor set will contain all transitive imports and
            // is therefore self-contained. Default is false.
            task.descriptorSetOptions.includeImports = true
        }
    }
}

task publishSchema(dependsOn: build) {
    description "Publishes protobuf schema in the `main` sourceSet to DataHub"

    def javaLauncher = javaToolchains.launcherFor {
        languageVersion = JavaLanguageVersion.of(11)
    }

    fileTree("myschema").matching {
        exclude "mycompany/mymetadata/**"
    }.each {f ->
        doLast {
            javaexec {
                executable = javaLauncher.get().getExecutablePath().getAsFile().getAbsolutePath()
                classpath = configurations.datahub
                main = "datahub.protobuf.Proto2DataHub"
                args = ["${projectDir}/build/descriptors/main.dsc", file(f).getAbsoluteFile()]
            }
        }
    }
}
